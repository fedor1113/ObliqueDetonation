/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


scale   1;
angle_deg   15;
// l		80;  // attempt 2
// l		200;  // attempt 2.5
l		300;
// l_path	#eval{ $l * 0.5 };
l_path	20;

angle   #eval{ degToRad($angle_deg) };
corner_x #calc "0.3048 * $l";
// corner_y #calc "0.081670913853 * $l";
corner_y #eval{ $corner_x * tan($angle) };
// top_y 	0.1524;
// top_y 	#calc "$corner_y + 1.8*$corner_y";
// top_y 	#calc "$corner_y + 2*$corner_y";
// top_y 	#calc "$corner_y + 1.5*$corner_y";
// top_y 	#calc "$corner_y + 1.2*$corner_y";  // attempt 2
// top_y 	#calc "$corner_y + 2*$corner_y";  // attempt 2.5
top_y 	#calc "$corner_y + 1.2*$corner_y";
// top_y 	#eval{ $corner_x * tan($angle+degToRad(5)) };
// top_y 	0.1524;
// top_y 	#calc "$corner_y + 1.1*$corner_y";
path    #calc "-0.15242 * $l_path";

vertices
(
    ($path 0       -0.005)
    (0       0       -0.005)
    ($corner_x  $corner_y  -0.005)
    ($path $top_y -0.005)
    (0       $top_y -0.005)
    ($corner_x  $top_y -0.005)

    ($path 0        0.005)
    (0       0        0.005)
    ($corner_x  $corner_y 0.005)
    ($path $top_y  0.005)
    (0       $top_y  0.005)
    ($corner_x  $top_y  0.005)

);

blocks
(
    // hex (0 1 4 3 6 7 10 9 ) (40 40 1) simpleGrading (0.25 2 1)
    // hex (1 2 5 4 7 8 11 10) (80 40 1) simpleGrading (2 2 1)
    // hex (0 1 4 3 6 7 10 9 ) (100 200 1) simpleGrading (0.875 2 1)  // a2.5
    // hex (1 2 5 4 7 8 11 10) (1000 200 1) simpleGrading (2 2 1)
	hex (0 1 4 3 6 7 10 9 ) (100 800 1) simpleGrading (0.5 10 1)
    hex (1 2 5 4 7 8 11 10) (1000 800 1) simpleGrading (15 10 1)
	// hex (0 1 4 3 6 7 10 9 ) (100 300 1) simpleGrading (1 1 1)
    // hex (1 2 5 4 7 8 11 10) (600 300 1) simpleGrading (0.5 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 6 9 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (2 5 11 8)
        );
    }
    bottom
    {
        type symmetryPlane;
        faces
        (
            (0 1 7 6)
        );
    }
    top
    {
        // type symmetryPlane;
        type patch;
        faces
        (
            (3 9 10 4)
            (4 10 11 5)
        );
    }
    obstacle
    {
        type patch;
        faces
        (
            (1 2 8 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
